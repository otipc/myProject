<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd 
			http://www.springframework.org/schema/data/jpa 
			http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
			http://www.springframework.org/schema/cache 
			http://www.springframework.org/schema/cache/spring-cache.xsd">

	<bean name="initBean" class="cn.hdtmedia.conf.HdtReportInitBean"></bean>
	

	<context:component-scan base-package="cn.hdtmedia.report" />
	<!-- 属性文件位置 -->
	<context:property-placeholder
		location="classpath:druid.properties" />	

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${druid.url}" />
		<property name="username" value="${druid.username}" />
		<property name="password" value="${druid.password}" />
		<property name="driverClassName" value="${druid.driverClassName}" />
		<property name="filters" value="${druid.filters}" />

		<property name="maxActive" value="${druid.maxActive}" />
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="minIdle" value="${druid.minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${druid.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${druid.logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	
	<jpa:repositories base-package="cn.hdtmedia.report.dao"
		repository-impl-postfix="Impl" entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager" />



	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:orm.xml" />
		<property name="persistenceUnitName" value="SimpleDBCP" />
		<property name="dataSource" ref="druidDataSource" />
	</bean>


	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>mail.hdtmedia.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
		<property name="username">
			<value>chaoguo.cui@hdtmedia.com</value>
		</property>
		<property name="password">
			<value>123456</value>
		</property>
	</bean>


	<!-- 建立视图内拦截器来解决JPA中访问延迟加载属性时产生的无会话异常 -->
	<!-- LazyInitializationException: could not initialize proxy no session -->
	<!-- 此拦截器会注入到servlet配置中的DefaultAnnotationHandlerMapping中 -->
	<bean name="openEntityManagerInViewInterceptor"
		class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
		<property name="entityManagerFactory">
			<ref bean="entityManagerFactory" />
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="openEntityManagerInViewInterceptor" />
			</list>
		</property>
	</bean>

</beans>